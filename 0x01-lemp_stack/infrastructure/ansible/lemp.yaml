---
- hosts: server
  remote_user: ubuntu
  become: true
  vars_files:
    - secrets.yaml
  tasks:
    - name: Create an Nginx Server Block
      blockinfile:
        path: /etc/nginx/sites-available/projectlemp
        create: true
        block: |
          server {
              listen 80  default_server;
              server_name projectlemp www.projectlemp;
              root /var/www/projectlemp;

              index index.html index.htm index.php;

              location / {
                  try_files $uri $uri/ =404;
              }

              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
              }

              location ~ /\.ht {
                  deny all;
              }
          }

    - name: Setup HTML index page
      blockinfile:
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        path: /var/www/projectlemp/index.html
        create: true
        block: |
          <h2> Hello from NGINX </h2>

    - name: Setup php index page
      blockinfile:
        marker: ""
        path: /var/www/projectlemp/index.php
        create: true
        block: |
          <?php
            phpinfo();
          ?>

    - name: Setup Todo Page
      blockinfile:
        create: true
        path: /var/www/projectlemp/todo.php
        marker: ""
        block: |
          <?php
            $user = "{{ DB_USER }}";
            $password = "{{ DB_PASS }}";
            $database = "{{ DB_NAME }}";
            $table = "{{ TABLE_NAME }}";

            try {
              $db = new PDO("mysql:host=localhost;dbname=$database", $user, $password);
              echo "<h2>TODO</h2><ol>";
              foreach($db->query("SELECT content FROM $table") as $row) {
                echo "<li>" . $row['content'] . "</li>";
              }
              echo "</ol>";
            } catch (PDOException $e) {
                print "Error!: " . $e->getMessage() . "<br/>";
                die();
            }
          ?>

    - name: Remove ansible comments from index files (if they exist)
      shell: |
        sed '/^# BEGIN ANSIBLE MANAGED BLOCK$/d;/^# END ANSIBLE MANAGED BLOCK$/d' /var/www/projectlemp/index.html
        sed '/^# BEGIN ANSIBLE MANAGED BLOCK$/d;/^# END ANSIBLE MANAGED BLOCK$/d' /var/www/projectlemp/index.php

    - name: Load new nginx config
      shell: |
        sudo rm /etc/nginx/sites-enabled/default; 
        sudo ln -sf /etc/nginx/sites-available/projectlemp /etc/nginx/sites-enabled/;
      notify:
        - restart nginx

    - name: Setup MySQL User
      shell: |
        echo "CREATE USER  IF NOT EXISTS '{{ DB_USER }}'@'localhost' IDENTIFIED  WITH \
          mysql_native_password   BY '{{ DB_PASS }}'; \
          GRANT ALL PRIVILEGES ON *.* TO '{{ DB_USER }}'@'localhost';" \
        | sudo mysql;
      register: mysql_report

    - name: MySQL report
      debug:
        var: mysql_report

    - name: Create and Populate Database
      shell: |
        echo 'DROP DATABASE IF EXISTS example_database;
          CREATE DATABASE IF NOT EXISTS example_database;
          CREATE TABLE example_database.todo_list (
              item_id INT AUTO_INCREMENT,
              content VARCHAR(255),
              PRIMARY KEY(item_id)
          );
          INSERT INTO example_database.todo_list (content)
          VALUES ("My first important item");' | sudo mysql
      register: db_report

    - name: Database Report
      debug:
        var: db_report

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: restart service
      shell: |
        sudo nginx -s reload
